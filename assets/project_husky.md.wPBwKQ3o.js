import{_ as i,o as s,c as a,R as t}from"./chunks/framework.TypptRFE.js";const u=JSON.parse('{"title":"Git hooks","description":"","frontmatter":{},"headers":[],"relativePath":"project/husky.md","filePath":"project/husky.md","lastUpdated":1701358147000}'),l={name:"project/husky.md"},n=t(`<h1 id="git-hooks" tabindex="-1">Git hooks <a class="header-anchor" href="#git-hooks" aria-label="Permalink to &quot;Git hooks&quot;">​</a></h1><p>Git Hooks（Git 钩子）是在特定事件触发时执行的脚本。它们允许你在 Git 的不同阶段插入自定义的脚本逻辑，从而在版本控制过程中执行特定的操作。Git 钩子是一种强大的自动化工具，可以帮助你在开发过程中自动执行代码检查、测试、格式化等任务，以确保代码质量和一致性。请注意，使用前必先 <code>git init</code> 初始化项目后方可生效。</p><h2 id="lint-staged" tabindex="-1">lint-staged <a class="header-anchor" href="#lint-staged" aria-label="Permalink to &quot;lint-staged&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint-staged</span></span></code></pre></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.{js,cjs,mjs,ts,vue}&quot;:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm run eslint&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm run prettier&quot;]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .lintstagedrc.json</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">支持几种格式的配置文件</p><ul><li>package.json &gt; lint-staged</li><li>.lintstagedrc / ..lintstagedrc.json / .lintstagedrc.yml</li><li>.lintstagedrc.mjs / lint-staged.config.mjs</li><li>.lintstagedrc.cjs / lint-staged.config.cjs</li><li>.lintstagedrc.js / lint-staged.config.js</li></ul></div><h2 id="husky" tabindex="-1">Husky <a class="header-anchor" href="#husky" aria-label="Permalink to &quot;Husky&quot;">​</a></h2><h3 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span></span></code></pre></div><h3 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="添加" tabindex="-1">添加 <a class="header-anchor" href="#添加" aria-label="Permalink to &quot;添加&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/pre-commit</span></span></code></pre></div><h2 id="commitlint" tabindex="-1">commitlint <a class="header-anchor" href="#commitlint" aria-label="Permalink to &quot;commitlint&quot;">​</a></h2><p>根据 commitlint-config-tradition（基于 Angular 约定）的常见类型可以是：</p><ul><li>build: 构建系统或外部依赖的更改，例如构建过程、依赖库的版本更新等。</li><li>chore: 一些零碎的变动，通常与构建过程或工具相关的改动。</li><li>ci: 持续集成配置文件和脚本的修改。</li><li>docs: 文档相关的变更，如文档的添加、修改、删除。</li><li>feat: 新功能的添加。</li><li>fix: 修复 bug。</li><li>perf: 性能优化。</li><li>refactor: 代码重构，不是新增功能也不是修复 bug。</li><li>revert: 撤销之前的提交。</li><li>style: 代码风格相关的修改，不影响代码逻辑。</li><li>test: 测试相关的修改。</li></ul><h3 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @commitlint/{config-conventional,cli}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @commitlint/config-conventional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @commitlint/cli</span></span></code></pre></div><h3 id="配置-1" tabindex="-1">配置 <a class="header-anchor" href="#配置-1" aria-label="Permalink to &quot;配置&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitlint.config.js</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">支持几种格式的配置文件</p><ul><li>.commitlintrc</li><li>.commitlintrc.json</li><li>.commitlintrc.yaml / .commitlintrc.yml</li><li>.commitlintrc.js / .commitlintrc.cjs</li><li>.commitlintrc.ts / .commitlintrc.cts</li><li>commitlint.config.js / commitlint.config.cjs</li><li>commitlint.config.ts / commitlint.config.cts</li><li>package.json &gt; commitlint</li></ul></div><h3 id="添加-hook" tabindex="-1">添加 hook <a class="header-anchor" href="#添加-hook" aria-label="Permalink to &quot;添加 hook&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/commit-msg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;npx --no -- commitlint --edit \${1}&#39;</span></span></code></pre></div>`,25),e=[n];function h(o,p,c,k,d,r){return s(),a("div",null,e)}const m=i(l,[["render",h]]);export{u as __pageData,m as default};
